@{
    Layout = "~/Areas/ReportBuilder/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Essential Studio for ASP.NET MVC : ReportBuilder";
}


@using Syncfusion.MVC.EJ;
@using Syncfusion.JavaScript;
<body style="overflow: hidden; position: static; margin: 0px; padding: 0px; width: 100%; height: 100%">
    <div id="sample_header_div" class="rptdesigner-sample-header">
        <div class="rptdesigner-sample-previewBtn">
            <button id="preview_btn" type="button" class="preview-rep preview-btn">
                <span>Preview</span>
            </button>
        </div>
        <div class="rptdesigner-sample-designBtn">
            <button id="design_btn" type="button" class="preview-rep design-btn">
                <span>Design</span>
            </button>
        </div>
        <div class="main-screen-logo">
            <a class="home-link" data-toggle="tooltip" data-placement="bottom" title="Syncfusion Report Designer">
                <img alt="Application Logo" id="application-logo" src="/Content/images/favicon.ico" onerror="if (this.src !== '/Content/images/favicon.ico') this.src = '/Content/images/favicon.ico';" />
            </a>
        </div>
        <div class="report-name">
            <h5 class="rptdesigner-sample-reportname" id="report_name_header">Untitled</h5>
        </div>
        <div class="report-status">
            <h5 class="rptdesigner-sample-reportstatus" id="report_status_header">(Edited)</h5>
        </div>
    </div>

    @*<div style="width:100%; height:100%;">*@
        @(Html.EJ().ReportDesigner("container").ServiceUrl(VirtualPathUtility.ToAbsolute("~/api/ReportDesigner"))
        .Create("controlInitialized")
        .ToolbarRendering("renderDesignerToolbar")
        .ToolbarSettings(tb => tb.Items(Syncfusion.JavaScript.ReportDesignerEnums.ToolbarItems.All &
        ~Syncfusion.JavaScript.ReportDesignerEnums.ToolbarItems.Preview & ~Syncfusion.JavaScript.ReportDesignerEnums.ToolbarItems.EditDesign))
        .ToolbarClick("toolbarClick")
        .ReportOpened("reportOpened")
        .ReportSaved("reportSaved")
        .ReportModified("reportModified")
        )
    @*</div>*@

    <script type="text/javascript">
        var isSubmit = true;
        var controlId = 'container';

        $(document).ready(function () {
            if (!(ej.browserInfo().name === "msie" && Number(ej.browserInfo().version) < 9)) {
                $(window).bind("resize", windowResize);
                $('#preview_btn').bind("click", previewClick);
                $('#design_btn').bind("click", designClick);
                refreshWindow();
                renderDesigner();
            } else {
                alert("ReportDesigner will not be supported in IE Version < 9");
            }
        });

        function windowResize(args) {
            refreshWindow();
        }

        function previewClick(agrs) {
            var designer = $('#' + controlId).data('ejReportDesigner');
            $('#design_btn').show();
            $('.rptdesigner-sample-designBtn').css('display', 'block');
            $('#preview_btn').hide();
            $('.rptdesigner-sample-previewBtn').css('display', "none");
            designer.showPreview();
        }

        function designClick(agrs) {
            var designer = $('#' + controlId).data('ejReportDesigner');
            $("#preview_btn").show();
            $(".rptdesigner-sample-previewBtn").css('display', 'block');
            $("#design_btn").hide();
            $(".rptdesigner-sample-designBtn").css('display', 'none');
            designer.showDesign();
        }

        function formSubmit(args) {
            isSubmit = false;
        }

        function windowUnload(args) {
            var designer = $('#' + controlId).data('ejReportDesigner');
            if (designer.hasReportChanges() && isSubmit) {
                return 'Changes you made may not be saved';
            }
            isSubmit = true;
        }

        function refreshWindow() {
            $('#' + controlId).width($(window).width());
            var windowHeight = $(window).innerHeight();
            var headerHeight = $("#sample_header_div").outerHeight();
            var containerHeight = windowHeight - headerHeight;
            $('#' + controlId).height(containerHeight);
        }

        function renderDesigner() {
            $(document.body).bind('submit', $.proxy(this.formSubmit, this));
            $(window).bind('beforeunload', $.proxy(this.windowUnload, this));
        }

        function controlInitialized(args) {
            var designer = $('#' + controlId).data('ejReportDesigner');
            designer.openReport('/Catagory2/Personal Expense Analysis');
        }

        function reportModified(args) {
            if (args.isModified) {
                $('.rptdesigner-sample-reportstatus').html('(Edited)');
            }
        }

        function reportOpened(args) {
            $('#report_name_header').html(args.reportName);
            $('.rptdesigner-sample-reportstatus').html('(Edited)');
        }

        function reportSaved(args) {
            $('.rptdesigner-sample-reportstatus').html('(Saved)');
        }

        function toolbarClick(args) {
            var designer = $('#' + controlId).data('ejReportDesigner');
            switch (args.click) {
                case 'New':
                    args.cancel = true;
                    if (designer.hasReportChanges()) {
                        if (confirm("Do you want to discard the modifed changes?") == true) {
                            designer.newReport('Untitled');
                            $('#report_name_header').html('Untitled');
                        }
                    }
                    else {
                        designer.newReport('Untitled');
                        $('#report_name_header').html('Untitled');
                    }
                    break;
            }
        }
    </script>
</body>
